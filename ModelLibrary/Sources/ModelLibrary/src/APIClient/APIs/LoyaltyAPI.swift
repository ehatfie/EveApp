//
// LoyaltyAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


@MainActor open class LoyaltyAPI {
    /**
     * enum for parameter datasource
     */
    public enum Datasource_getCharactersCharacterIdLoyaltyPoints: String { 
        case tranquility = "tranquility"
    }

    /**
     Get loyalty points

     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter token: (query) Access token to use if unable to set a header (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    @MainActor open class func getCharactersCharacterIdLoyaltyPoints(characterId: Int, datasource: Datasource_getCharactersCharacterIdLoyaltyPoints? = nil, ifNoneMatch: String? = nil, token: String? = nil, completion: @escaping ((_ data: [GetCharactersCharacterIdLoyaltyPoints200Ok]?,_ error: Error?) -> Void)) {
        getCharactersCharacterIdLoyaltyPointsWithRequestBuilder(characterId: characterId, datasource: datasource, ifNoneMatch: ifNoneMatch, token: token).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get loyalty points
     - GET /v1/characters/{character_id}/loyalty/points/

     - OAuth:
       - type: oauth2
       - name: evesso
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - examples: [{contentType=application/json, example=[ {
  "corporation_id" : 0,
  "loyalty_points" : 6
}, {
  "corporation_id" : 0,
  "loyalty_points" : 6
}, {
  "corporation_id" : 0,
  "loyalty_points" : 6
}, {
  "corporation_id" : 0,
  "loyalty_points" : 6
}, {
  "corporation_id" : 0,
  "loyalty_points" : 6
}, {
  "corporation_id" : 0,
  "loyalty_points" : 6
}, {
  "corporation_id" : 0,
  "loyalty_points" : 6
}, {
  "corporation_id" : 0,
  "loyalty_points" : 6
}, {
  "corporation_id" : 0,
  "loyalty_points" : 6
}, {
  "corporation_id" : 0,
  "loyalty_points" : 6
} ]}]
     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter token: (query) Access token to use if unable to set a header (optional)

     - returns: RequestBuilder<[GetCharactersCharacterIdLoyaltyPoints200Ok]> 
     */
    @MainActor open class func getCharactersCharacterIdLoyaltyPointsWithRequestBuilder(characterId: Int, datasource: Datasource_getCharactersCharacterIdLoyaltyPoints? = nil, ifNoneMatch: String? = nil, token: String? = nil) -> RequestBuilder<[GetCharactersCharacterIdLoyaltyPoints200Ok]> {
        var path = "/v1/characters/{character_id}/loyalty/points/"
        let characterIdPreEscape = "\(characterId)"
        let characterIdPostEscape = characterIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{character_id}", with: characterIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "datasource": datasource?.rawValue, 
                        "token": token
        ])
        let nillableHeaders: [String: Any?] = [
                        "If-None-Match": ifNoneMatch
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[GetCharactersCharacterIdLoyaltyPoints200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }
    /**
     * enum for parameter datasource
     */
    public enum Datasource_getLoyaltyStoresCorporationIdOffers: String { 
        case tranquility = "tranquility"
    }

    /**
     List loyalty store offers

     - parameter corporationId: (path) An EVE corporation ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    @MainActor open class func getLoyaltyStoresCorporationIdOffers(corporationId: Int, datasource: Datasource_getLoyaltyStoresCorporationIdOffers? = nil, ifNoneMatch: String? = nil, completion: @escaping ((_ data: [GetLoyaltyStoresCorporationIdOffers200Ok]?,_ error: Error?) -> Void)) {
        getLoyaltyStoresCorporationIdOffersWithRequestBuilder(corporationId: corporationId, datasource: datasource, ifNoneMatch: ifNoneMatch).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     List loyalty store offers
     - GET /v1/loyalty/stores/{corporation_id}/offers/

     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - examples: [{contentType=application/json, example=[ {
  "lp_cost" : 1,
  "quantity" : 5,
  "type_id" : 9,
  "isk_cost" : 6,
  "ak_cost" : 0,
  "offer_id" : 5,
  "required_items" : [ {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  } ]
}, {
  "lp_cost" : 1,
  "quantity" : 5,
  "type_id" : 9,
  "isk_cost" : 6,
  "ak_cost" : 0,
  "offer_id" : 5,
  "required_items" : [ {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  } ]
}, {
  "lp_cost" : 1,
  "quantity" : 5,
  "type_id" : 9,
  "isk_cost" : 6,
  "ak_cost" : 0,
  "offer_id" : 5,
  "required_items" : [ {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  } ]
}, {
  "lp_cost" : 1,
  "quantity" : 5,
  "type_id" : 9,
  "isk_cost" : 6,
  "ak_cost" : 0,
  "offer_id" : 5,
  "required_items" : [ {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  } ]
}, {
  "lp_cost" : 1,
  "quantity" : 5,
  "type_id" : 9,
  "isk_cost" : 6,
  "ak_cost" : 0,
  "offer_id" : 5,
  "required_items" : [ {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  } ]
}, {
  "lp_cost" : 1,
  "quantity" : 5,
  "type_id" : 9,
  "isk_cost" : 6,
  "ak_cost" : 0,
  "offer_id" : 5,
  "required_items" : [ {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  } ]
}, {
  "lp_cost" : 1,
  "quantity" : 5,
  "type_id" : 9,
  "isk_cost" : 6,
  "ak_cost" : 0,
  "offer_id" : 5,
  "required_items" : [ {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  } ]
}, {
  "lp_cost" : 1,
  "quantity" : 5,
  "type_id" : 9,
  "isk_cost" : 6,
  "ak_cost" : 0,
  "offer_id" : 5,
  "required_items" : [ {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  } ]
}, {
  "lp_cost" : 1,
  "quantity" : 5,
  "type_id" : 9,
  "isk_cost" : 6,
  "ak_cost" : 0,
  "offer_id" : 5,
  "required_items" : [ {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  } ]
}, {
  "lp_cost" : 1,
  "quantity" : 5,
  "type_id" : 9,
  "isk_cost" : 6,
  "ak_cost" : 0,
  "offer_id" : 5,
  "required_items" : [ {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  }, {
    "quantity" : 2,
    "type_id" : 7
  } ]
} ]}]
     - parameter corporationId: (path) An EVE corporation ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)

     - returns: RequestBuilder<[GetLoyaltyStoresCorporationIdOffers200Ok]> 
     */
    @MainActor open class func getLoyaltyStoresCorporationIdOffersWithRequestBuilder(corporationId: Int, datasource: Datasource_getLoyaltyStoresCorporationIdOffers? = nil, ifNoneMatch: String? = nil) -> RequestBuilder<[GetLoyaltyStoresCorporationIdOffers200Ok]> {
        var path = "/v1/loyalty/stores/{corporation_id}/offers/"
        let corporationIdPreEscape = "\(corporationId)"
        let corporationIdPostEscape = corporationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{corporation_id}", with: corporationIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "datasource": datasource?.rawValue
        ])
        let nillableHeaders: [String: Any?] = [
                        "If-None-Match": ifNoneMatch
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[GetLoyaltyStoresCorporationIdOffers200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }
}
