//
// WalletAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


@MainActor open class WalletAPI {
    /**
     * enum for parameter datasource
     */
    public enum Datasource_getCharactersCharacterIdWallet: String { 
        case tranquility = "tranquility"
    }

    /**
     Get a character's wallet balance

     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter token: (query) Access token to use if unable to set a header (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    @MainActor open class func getCharactersCharacterIdWallet(characterId: Int, datasource: Datasource_getCharactersCharacterIdWallet? = nil, ifNoneMatch: String? = nil, token: String? = nil, completion: @escaping ((_ data: Double?,_ error: Error?) -> Void)) {
        getCharactersCharacterIdWalletWithRequestBuilder(characterId: characterId, datasource: datasource, ifNoneMatch: ifNoneMatch, token: token).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get a character's wallet balance
     - GET /v1/characters/{character_id}/wallet/

     - OAuth:
       - type: oauth2
       - name: evesso
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - examples: [{contentType=application/json, example=0.8008281904610115}]
     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter token: (query) Access token to use if unable to set a header (optional)

     - returns: RequestBuilder<Double> 
     */
    @MainActor open class func getCharactersCharacterIdWalletWithRequestBuilder(characterId: Int, datasource: Datasource_getCharactersCharacterIdWallet? = nil, ifNoneMatch: String? = nil, token: String? = nil) -> RequestBuilder<Double> {
        var path = "/v1/characters/{character_id}/wallet/"
        let characterIdPreEscape = "\(characterId)"
        let characterIdPostEscape = characterIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{character_id}", with: characterIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "datasource": datasource?.rawValue, 
                        "token": token
        ])
        let nillableHeaders: [String: Any?] = [
                        "If-None-Match": ifNoneMatch
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Double>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }
    /**
     * enum for parameter datasource
     */
    public enum Datasource_getCharactersCharacterIdWalletJournal: String { 
        case tranquility = "tranquility"
    }

    /**
     Get character wallet journal

     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter page: (query) Which page of results to return (optional, default to 1)
     - parameter token: (query) Access token to use if unable to set a header (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    @MainActor open class func getCharactersCharacterIdWalletJournal(characterId: Int, datasource: Datasource_getCharactersCharacterIdWalletJournal? = nil, ifNoneMatch: String? = nil, page: Int? = nil, token: String? = nil, completion: @escaping ((_ data: [GetCharactersCharacterIdWalletJournal200Ok]?,_ error: Error?) -> Void)) {
        getCharactersCharacterIdWalletJournalWithRequestBuilder(characterId: characterId, datasource: datasource, ifNoneMatch: ifNoneMatch, page: page, token: token).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get character wallet journal
     - GET /v6/characters/{character_id}/wallet/journal/

     - OAuth:
       - type: oauth2
       - name: evesso
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - examples: [{contentType=application/json, example=[ {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "reason" : "reason",
  "amount" : 0.8008281904610115,
  "context_id_type" : "structure_id",
  "first_party_id" : 5,
  "description" : "description",
  "tax" : 7.061401241503109,
  "tax_receiver_id" : 9,
  "balance" : 6.027456183070403,
  "context_id" : 1,
  "id" : 5,
  "ref_type" : "acceleration_gate_fee",
  "second_party_id" : 2
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "reason" : "reason",
  "amount" : 0.8008281904610115,
  "context_id_type" : "structure_id",
  "first_party_id" : 5,
  "description" : "description",
  "tax" : 7.061401241503109,
  "tax_receiver_id" : 9,
  "balance" : 6.027456183070403,
  "context_id" : 1,
  "id" : 5,
  "ref_type" : "acceleration_gate_fee",
  "second_party_id" : 2
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "reason" : "reason",
  "amount" : 0.8008281904610115,
  "context_id_type" : "structure_id",
  "first_party_id" : 5,
  "description" : "description",
  "tax" : 7.061401241503109,
  "tax_receiver_id" : 9,
  "balance" : 6.027456183070403,
  "context_id" : 1,
  "id" : 5,
  "ref_type" : "acceleration_gate_fee",
  "second_party_id" : 2
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "reason" : "reason",
  "amount" : 0.8008281904610115,
  "context_id_type" : "structure_id",
  "first_party_id" : 5,
  "description" : "description",
  "tax" : 7.061401241503109,
  "tax_receiver_id" : 9,
  "balance" : 6.027456183070403,
  "context_id" : 1,
  "id" : 5,
  "ref_type" : "acceleration_gate_fee",
  "second_party_id" : 2
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "reason" : "reason",
  "amount" : 0.8008281904610115,
  "context_id_type" : "structure_id",
  "first_party_id" : 5,
  "description" : "description",
  "tax" : 7.061401241503109,
  "tax_receiver_id" : 9,
  "balance" : 6.027456183070403,
  "context_id" : 1,
  "id" : 5,
  "ref_type" : "acceleration_gate_fee",
  "second_party_id" : 2
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "reason" : "reason",
  "amount" : 0.8008281904610115,
  "context_id_type" : "structure_id",
  "first_party_id" : 5,
  "description" : "description",
  "tax" : 7.061401241503109,
  "tax_receiver_id" : 9,
  "balance" : 6.027456183070403,
  "context_id" : 1,
  "id" : 5,
  "ref_type" : "acceleration_gate_fee",
  "second_party_id" : 2
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "reason" : "reason",
  "amount" : 0.8008281904610115,
  "context_id_type" : "structure_id",
  "first_party_id" : 5,
  "description" : "description",
  "tax" : 7.061401241503109,
  "tax_receiver_id" : 9,
  "balance" : 6.027456183070403,
  "context_id" : 1,
  "id" : 5,
  "ref_type" : "acceleration_gate_fee",
  "second_party_id" : 2
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "reason" : "reason",
  "amount" : 0.8008281904610115,
  "context_id_type" : "structure_id",
  "first_party_id" : 5,
  "description" : "description",
  "tax" : 7.061401241503109,
  "tax_receiver_id" : 9,
  "balance" : 6.027456183070403,
  "context_id" : 1,
  "id" : 5,
  "ref_type" : "acceleration_gate_fee",
  "second_party_id" : 2
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "reason" : "reason",
  "amount" : 0.8008281904610115,
  "context_id_type" : "structure_id",
  "first_party_id" : 5,
  "description" : "description",
  "tax" : 7.061401241503109,
  "tax_receiver_id" : 9,
  "balance" : 6.027456183070403,
  "context_id" : 1,
  "id" : 5,
  "ref_type" : "acceleration_gate_fee",
  "second_party_id" : 2
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "reason" : "reason",
  "amount" : 0.8008281904610115,
  "context_id_type" : "structure_id",
  "first_party_id" : 5,
  "description" : "description",
  "tax" : 7.061401241503109,
  "tax_receiver_id" : 9,
  "balance" : 6.027456183070403,
  "context_id" : 1,
  "id" : 5,
  "ref_type" : "acceleration_gate_fee",
  "second_party_id" : 2
} ]}]
     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter page: (query) Which page of results to return (optional, default to 1)
     - parameter token: (query) Access token to use if unable to set a header (optional)

     - returns: RequestBuilder<[GetCharactersCharacterIdWalletJournal200Ok]> 
     */
    @MainActor open class func getCharactersCharacterIdWalletJournalWithRequestBuilder(characterId: Int, datasource: Datasource_getCharactersCharacterIdWalletJournal? = nil, ifNoneMatch: String? = nil, page: Int? = nil, token: String? = nil) -> RequestBuilder<[GetCharactersCharacterIdWalletJournal200Ok]> {
        var path = "/v6/characters/{character_id}/wallet/journal/"
        let characterIdPreEscape = "\(characterId)"
        let characterIdPostEscape = characterIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{character_id}", with: characterIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "datasource": datasource?.rawValue, 
                        "page": page?.encodeToJSON(), 
                        "token": token
        ])
        let nillableHeaders: [String: Any?] = [
                        "If-None-Match": ifNoneMatch
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[GetCharactersCharacterIdWalletJournal200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }
    /**
     * enum for parameter datasource
     */
    public enum Datasource_getCharactersCharacterIdWalletTransactions: String { 
        case tranquility = "tranquility"
    }

    /**
     Get wallet transactions

     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter fromId: (query) Only show transactions happened before the one referenced by this id (optional)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter token: (query) Access token to use if unable to set a header (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    @MainActor open class func getCharactersCharacterIdWalletTransactions(characterId: Int, datasource: Datasource_getCharactersCharacterIdWalletTransactions? = nil, fromId: Int64? = nil, ifNoneMatch: String? = nil, token: String? = nil, completion: @escaping ((_ data: [GetCharactersCharacterIdWalletTransactions200Ok]?,_ error: Error?) -> Void)) {
        getCharactersCharacterIdWalletTransactionsWithRequestBuilder(characterId: characterId, datasource: datasource, fromId: fromId, ifNoneMatch: ifNoneMatch, token: token).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get wallet transactions
     - GET /v1/characters/{character_id}/wallet/transactions/

     - OAuth:
       - type: oauth2
       - name: evesso
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - examples: [{contentType=application/json, example=[ {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "transaction_id" : 5,
  "quantity" : 5,
  "type_id" : 2,
  "unit_price" : 7.061401241503109,
  "client_id" : 0,
  "location_id" : 1,
  "is_buy" : true,
  "is_personal" : true,
  "journal_ref_id" : 6
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "transaction_id" : 5,
  "quantity" : 5,
  "type_id" : 2,
  "unit_price" : 7.061401241503109,
  "client_id" : 0,
  "location_id" : 1,
  "is_buy" : true,
  "is_personal" : true,
  "journal_ref_id" : 6
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "transaction_id" : 5,
  "quantity" : 5,
  "type_id" : 2,
  "unit_price" : 7.061401241503109,
  "client_id" : 0,
  "location_id" : 1,
  "is_buy" : true,
  "is_personal" : true,
  "journal_ref_id" : 6
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "transaction_id" : 5,
  "quantity" : 5,
  "type_id" : 2,
  "unit_price" : 7.061401241503109,
  "client_id" : 0,
  "location_id" : 1,
  "is_buy" : true,
  "is_personal" : true,
  "journal_ref_id" : 6
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "transaction_id" : 5,
  "quantity" : 5,
  "type_id" : 2,
  "unit_price" : 7.061401241503109,
  "client_id" : 0,
  "location_id" : 1,
  "is_buy" : true,
  "is_personal" : true,
  "journal_ref_id" : 6
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "transaction_id" : 5,
  "quantity" : 5,
  "type_id" : 2,
  "unit_price" : 7.061401241503109,
  "client_id" : 0,
  "location_id" : 1,
  "is_buy" : true,
  "is_personal" : true,
  "journal_ref_id" : 6
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "transaction_id" : 5,
  "quantity" : 5,
  "type_id" : 2,
  "unit_price" : 7.061401241503109,
  "client_id" : 0,
  "location_id" : 1,
  "is_buy" : true,
  "is_personal" : true,
  "journal_ref_id" : 6
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "transaction_id" : 5,
  "quantity" : 5,
  "type_id" : 2,
  "unit_price" : 7.061401241503109,
  "client_id" : 0,
  "location_id" : 1,
  "is_buy" : true,
  "is_personal" : true,
  "journal_ref_id" : 6
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "transaction_id" : 5,
  "quantity" : 5,
  "type_id" : 2,
  "unit_price" : 7.061401241503109,
  "client_id" : 0,
  "location_id" : 1,
  "is_buy" : true,
  "is_personal" : true,
  "journal_ref_id" : 6
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "transaction_id" : 5,
  "quantity" : 5,
  "type_id" : 2,
  "unit_price" : 7.061401241503109,
  "client_id" : 0,
  "location_id" : 1,
  "is_buy" : true,
  "is_personal" : true,
  "journal_ref_id" : 6
} ]}]
     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter fromId: (query) Only show transactions happened before the one referenced by this id (optional)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter token: (query) Access token to use if unable to set a header (optional)

     - returns: RequestBuilder<[GetCharactersCharacterIdWalletTransactions200Ok]> 
     */
    @MainActor open class func getCharactersCharacterIdWalletTransactionsWithRequestBuilder(characterId: Int, datasource: Datasource_getCharactersCharacterIdWalletTransactions? = nil, fromId: Int64? = nil, ifNoneMatch: String? = nil, token: String? = nil) -> RequestBuilder<[GetCharactersCharacterIdWalletTransactions200Ok]> {
        var path = "/v1/characters/{character_id}/wallet/transactions/"
        let characterIdPreEscape = "\(characterId)"
        let characterIdPostEscape = characterIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{character_id}", with: characterIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "datasource": datasource?.rawValue, 
                        "from_id": fromId?.encodeToJSON(), 
                        "token": token
        ])
        let nillableHeaders: [String: Any?] = [
                        "If-None-Match": ifNoneMatch
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[GetCharactersCharacterIdWalletTransactions200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }
    /**
     * enum for parameter datasource
     */
    public enum Datasource_getCorporationsCorporationIdWallets: String { 
        case tranquility = "tranquility"
    }

    /**
     Returns a corporation's wallet balance

     - parameter corporationId: (path) An EVE corporation ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter token: (query) Access token to use if unable to set a header (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    @MainActor open class func getCorporationsCorporationIdWallets(corporationId: Int, datasource: Datasource_getCorporationsCorporationIdWallets? = nil, ifNoneMatch: String? = nil, token: String? = nil, completion: @escaping ((_ data: [GetCorporationsCorporationIdWallets200Ok]?,_ error: Error?) -> Void)) {
        getCorporationsCorporationIdWalletsWithRequestBuilder(corporationId: corporationId, datasource: datasource, ifNoneMatch: ifNoneMatch, token: token).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns a corporation's wallet balance
     - GET /v1/corporations/{corporation_id}/wallets/

     - OAuth:
       - type: oauth2
       - name: evesso
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - examples: [{contentType=application/json, example=[ {
  "division" : 4,
  "balance" : 0.8008281904610115
}, {
  "division" : 4,
  "balance" : 0.8008281904610115
}, {
  "division" : 4,
  "balance" : 0.8008281904610115
}, {
  "division" : 4,
  "balance" : 0.8008281904610115
}, {
  "division" : 4,
  "balance" : 0.8008281904610115
}, {
  "division" : 4,
  "balance" : 0.8008281904610115
}, {
  "division" : 4,
  "balance" : 0.8008281904610115
} ]}]
     - parameter corporationId: (path) An EVE corporation ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter token: (query) Access token to use if unable to set a header (optional)

     - returns: RequestBuilder<[GetCorporationsCorporationIdWallets200Ok]> 
     */
    @MainActor open class func getCorporationsCorporationIdWalletsWithRequestBuilder(corporationId: Int, datasource: Datasource_getCorporationsCorporationIdWallets? = nil, ifNoneMatch: String? = nil, token: String? = nil) -> RequestBuilder<[GetCorporationsCorporationIdWallets200Ok]> {
        var path = "/v1/corporations/{corporation_id}/wallets/"
        let corporationIdPreEscape = "\(corporationId)"
        let corporationIdPostEscape = corporationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{corporation_id}", with: corporationIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "datasource": datasource?.rawValue, 
                        "token": token
        ])
        let nillableHeaders: [String: Any?] = [
                        "If-None-Match": ifNoneMatch
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[GetCorporationsCorporationIdWallets200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }
    /**
     * enum for parameter datasource
     */
    public enum Datasource_getCorporationsCorporationIdWalletsDivisionJournal: String { 
        case tranquility = "tranquility"
    }

    /**
     Get corporation wallet journal

     - parameter corporationId: (path) An EVE corporation ID 
     - parameter division: (path) Wallet key of the division to fetch journals from 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter page: (query) Which page of results to return (optional, default to 1)
     - parameter token: (query) Access token to use if unable to set a header (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    @MainActor open class func getCorporationsCorporationIdWalletsDivisionJournal(corporationId: Int, division: Int, datasource: Datasource_getCorporationsCorporationIdWalletsDivisionJournal? = nil, ifNoneMatch: String? = nil, page: Int? = nil, token: String? = nil, completion: @escaping ((_ data: [GetCorporationsCorporationIdWalletsDivisionJournal200Ok]?,_ error: Error?) -> Void)) {
        getCorporationsCorporationIdWalletsDivisionJournalWithRequestBuilder(corporationId: corporationId, division: division, datasource: datasource, ifNoneMatch: ifNoneMatch, page: page, token: token).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get corporation wallet journal
     - GET /v4/corporations/{corporation_id}/wallets/{division}/journal/

     - OAuth:
       - type: oauth2
       - name: evesso
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - examples: [{contentType=application/json, example=[ {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "reason" : "reason",
  "amount" : 0.8008281904610115,
  "context_id_type" : "structure_id",
  "first_party_id" : 5,
  "description" : "description",
  "tax" : 7.061401241503109,
  "tax_receiver_id" : 9,
  "balance" : 6.027456183070403,
  "context_id" : 1,
  "id" : 5,
  "ref_type" : "acceleration_gate_fee",
  "second_party_id" : 2
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "reason" : "reason",
  "amount" : 0.8008281904610115,
  "context_id_type" : "structure_id",
  "first_party_id" : 5,
  "description" : "description",
  "tax" : 7.061401241503109,
  "tax_receiver_id" : 9,
  "balance" : 6.027456183070403,
  "context_id" : 1,
  "id" : 5,
  "ref_type" : "acceleration_gate_fee",
  "second_party_id" : 2
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "reason" : "reason",
  "amount" : 0.8008281904610115,
  "context_id_type" : "structure_id",
  "first_party_id" : 5,
  "description" : "description",
  "tax" : 7.061401241503109,
  "tax_receiver_id" : 9,
  "balance" : 6.027456183070403,
  "context_id" : 1,
  "id" : 5,
  "ref_type" : "acceleration_gate_fee",
  "second_party_id" : 2
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "reason" : "reason",
  "amount" : 0.8008281904610115,
  "context_id_type" : "structure_id",
  "first_party_id" : 5,
  "description" : "description",
  "tax" : 7.061401241503109,
  "tax_receiver_id" : 9,
  "balance" : 6.027456183070403,
  "context_id" : 1,
  "id" : 5,
  "ref_type" : "acceleration_gate_fee",
  "second_party_id" : 2
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "reason" : "reason",
  "amount" : 0.8008281904610115,
  "context_id_type" : "structure_id",
  "first_party_id" : 5,
  "description" : "description",
  "tax" : 7.061401241503109,
  "tax_receiver_id" : 9,
  "balance" : 6.027456183070403,
  "context_id" : 1,
  "id" : 5,
  "ref_type" : "acceleration_gate_fee",
  "second_party_id" : 2
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "reason" : "reason",
  "amount" : 0.8008281904610115,
  "context_id_type" : "structure_id",
  "first_party_id" : 5,
  "description" : "description",
  "tax" : 7.061401241503109,
  "tax_receiver_id" : 9,
  "balance" : 6.027456183070403,
  "context_id" : 1,
  "id" : 5,
  "ref_type" : "acceleration_gate_fee",
  "second_party_id" : 2
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "reason" : "reason",
  "amount" : 0.8008281904610115,
  "context_id_type" : "structure_id",
  "first_party_id" : 5,
  "description" : "description",
  "tax" : 7.061401241503109,
  "tax_receiver_id" : 9,
  "balance" : 6.027456183070403,
  "context_id" : 1,
  "id" : 5,
  "ref_type" : "acceleration_gate_fee",
  "second_party_id" : 2
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "reason" : "reason",
  "amount" : 0.8008281904610115,
  "context_id_type" : "structure_id",
  "first_party_id" : 5,
  "description" : "description",
  "tax" : 7.061401241503109,
  "tax_receiver_id" : 9,
  "balance" : 6.027456183070403,
  "context_id" : 1,
  "id" : 5,
  "ref_type" : "acceleration_gate_fee",
  "second_party_id" : 2
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "reason" : "reason",
  "amount" : 0.8008281904610115,
  "context_id_type" : "structure_id",
  "first_party_id" : 5,
  "description" : "description",
  "tax" : 7.061401241503109,
  "tax_receiver_id" : 9,
  "balance" : 6.027456183070403,
  "context_id" : 1,
  "id" : 5,
  "ref_type" : "acceleration_gate_fee",
  "second_party_id" : 2
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "reason" : "reason",
  "amount" : 0.8008281904610115,
  "context_id_type" : "structure_id",
  "first_party_id" : 5,
  "description" : "description",
  "tax" : 7.061401241503109,
  "tax_receiver_id" : 9,
  "balance" : 6.027456183070403,
  "context_id" : 1,
  "id" : 5,
  "ref_type" : "acceleration_gate_fee",
  "second_party_id" : 2
} ]}]
     - parameter corporationId: (path) An EVE corporation ID 
     - parameter division: (path) Wallet key of the division to fetch journals from 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter page: (query) Which page of results to return (optional, default to 1)
     - parameter token: (query) Access token to use if unable to set a header (optional)

     - returns: RequestBuilder<[GetCorporationsCorporationIdWalletsDivisionJournal200Ok]> 
     */
    @MainActor open class func getCorporationsCorporationIdWalletsDivisionJournalWithRequestBuilder(corporationId: Int, division: Int, datasource: Datasource_getCorporationsCorporationIdWalletsDivisionJournal? = nil, ifNoneMatch: String? = nil, page: Int? = nil, token: String? = nil) -> RequestBuilder<[GetCorporationsCorporationIdWalletsDivisionJournal200Ok]> {
        var path = "/v4/corporations/{corporation_id}/wallets/{division}/journal/"
        let corporationIdPreEscape = "\(corporationId)"
        let corporationIdPostEscape = corporationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{corporation_id}", with: corporationIdPostEscape, options: .literal, range: nil)
        let divisionPreEscape = "\(division)"
        let divisionPostEscape = divisionPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{division}", with: divisionPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "datasource": datasource?.rawValue, 
                        "page": page?.encodeToJSON(), 
                        "token": token
        ])
        let nillableHeaders: [String: Any?] = [
                        "If-None-Match": ifNoneMatch
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[GetCorporationsCorporationIdWalletsDivisionJournal200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }
    /**
     * enum for parameter datasource
     */
    public enum Datasource_getCorporationsCorporationIdWalletsDivisionTransactions: String { 
        case tranquility = "tranquility"
    }

    /**
     Get corporation wallet transactions

     - parameter corporationId: (path) An EVE corporation ID 
     - parameter division: (path) Wallet key of the division to fetch journals from 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter fromId: (query) Only show journal entries happened before the transaction referenced by this id (optional)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter token: (query) Access token to use if unable to set a header (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    @MainActor open class func getCorporationsCorporationIdWalletsDivisionTransactions(corporationId: Int, division: Int, datasource: Datasource_getCorporationsCorporationIdWalletsDivisionTransactions? = nil, fromId: Int64? = nil, ifNoneMatch: String? = nil, token: String? = nil, completion: @escaping ((_ data: [GetCorporationsCorporationIdWalletsDivisionTransactions200Ok]?,_ error: Error?) -> Void)) {
        getCorporationsCorporationIdWalletsDivisionTransactionsWithRequestBuilder(corporationId: corporationId, division: division, datasource: datasource, fromId: fromId, ifNoneMatch: ifNoneMatch, token: token).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get corporation wallet transactions
     - GET /v1/corporations/{corporation_id}/wallets/{division}/transactions/

     - OAuth:
       - type: oauth2
       - name: evesso
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - examples: [{contentType=application/json, example=[ {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "transaction_id" : 5,
  "quantity" : 5,
  "type_id" : 2,
  "unit_price" : 7.061401241503109,
  "client_id" : 0,
  "location_id" : 1,
  "is_buy" : true,
  "journal_ref_id" : 6
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "transaction_id" : 5,
  "quantity" : 5,
  "type_id" : 2,
  "unit_price" : 7.061401241503109,
  "client_id" : 0,
  "location_id" : 1,
  "is_buy" : true,
  "journal_ref_id" : 6
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "transaction_id" : 5,
  "quantity" : 5,
  "type_id" : 2,
  "unit_price" : 7.061401241503109,
  "client_id" : 0,
  "location_id" : 1,
  "is_buy" : true,
  "journal_ref_id" : 6
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "transaction_id" : 5,
  "quantity" : 5,
  "type_id" : 2,
  "unit_price" : 7.061401241503109,
  "client_id" : 0,
  "location_id" : 1,
  "is_buy" : true,
  "journal_ref_id" : 6
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "transaction_id" : 5,
  "quantity" : 5,
  "type_id" : 2,
  "unit_price" : 7.061401241503109,
  "client_id" : 0,
  "location_id" : 1,
  "is_buy" : true,
  "journal_ref_id" : 6
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "transaction_id" : 5,
  "quantity" : 5,
  "type_id" : 2,
  "unit_price" : 7.061401241503109,
  "client_id" : 0,
  "location_id" : 1,
  "is_buy" : true,
  "journal_ref_id" : 6
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "transaction_id" : 5,
  "quantity" : 5,
  "type_id" : 2,
  "unit_price" : 7.061401241503109,
  "client_id" : 0,
  "location_id" : 1,
  "is_buy" : true,
  "journal_ref_id" : 6
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "transaction_id" : 5,
  "quantity" : 5,
  "type_id" : 2,
  "unit_price" : 7.061401241503109,
  "client_id" : 0,
  "location_id" : 1,
  "is_buy" : true,
  "journal_ref_id" : 6
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "transaction_id" : 5,
  "quantity" : 5,
  "type_id" : 2,
  "unit_price" : 7.061401241503109,
  "client_id" : 0,
  "location_id" : 1,
  "is_buy" : true,
  "journal_ref_id" : 6
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "transaction_id" : 5,
  "quantity" : 5,
  "type_id" : 2,
  "unit_price" : 7.061401241503109,
  "client_id" : 0,
  "location_id" : 1,
  "is_buy" : true,
  "journal_ref_id" : 6
} ]}]
     - parameter corporationId: (path) An EVE corporation ID 
     - parameter division: (path) Wallet key of the division to fetch journals from 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter fromId: (query) Only show journal entries happened before the transaction referenced by this id (optional)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter token: (query) Access token to use if unable to set a header (optional)

     - returns: RequestBuilder<[GetCorporationsCorporationIdWalletsDivisionTransactions200Ok]> 
     */
    @MainActor open class func getCorporationsCorporationIdWalletsDivisionTransactionsWithRequestBuilder(corporationId: Int, division: Int, datasource: Datasource_getCorporationsCorporationIdWalletsDivisionTransactions? = nil, fromId: Int64? = nil, ifNoneMatch: String? = nil, token: String? = nil) -> RequestBuilder<[GetCorporationsCorporationIdWalletsDivisionTransactions200Ok]> {
        var path = "/v1/corporations/{corporation_id}/wallets/{division}/transactions/"
        let corporationIdPreEscape = "\(corporationId)"
        let corporationIdPostEscape = corporationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{corporation_id}", with: corporationIdPostEscape, options: .literal, range: nil)
        let divisionPreEscape = "\(division)"
        let divisionPostEscape = divisionPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{division}", with: divisionPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "datasource": datasource?.rawValue, 
                        "from_id": fromId?.encodeToJSON(), 
                        "token": token
        ])
        let nillableHeaders: [String: Any?] = [
                        "If-None-Match": ifNoneMatch
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[GetCorporationsCorporationIdWalletsDivisionTransactions200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }
}
