//
// ContactsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class ContactsAPI {
    /**
     * enum for parameter datasource
     */
    public enum Datasource_deleteCharactersCharacterIdContacts: String { 
        case tranquility = "tranquility"
    }

    /**
     Delete contacts

     - parameter characterId: (path) An EVE character ID 
     - parameter contactIds: (query) A list of contacts to delete 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter token: (query) Access token to use if unable to set a header (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteCharactersCharacterIdContacts(characterId: Int, contactIds: [Int], datasource: Datasource_deleteCharactersCharacterIdContacts? = nil, token: String? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        deleteCharactersCharacterIdContactsWithRequestBuilder(characterId: characterId, contactIds: contactIds, datasource: datasource, token: token).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Delete contacts
     - DELETE /v2/characters/{character_id}/contacts/

     - OAuth:
       - type: oauth2
       - name: evesso
     - parameter characterId: (path) An EVE character ID 
     - parameter contactIds: (query) A list of contacts to delete 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter token: (query) Access token to use if unable to set a header (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func deleteCharactersCharacterIdContactsWithRequestBuilder(characterId: Int, contactIds: [Int], datasource: Datasource_deleteCharactersCharacterIdContacts? = nil, token: String? = nil) -> RequestBuilder<Void> {
        var path = "/v2/characters/{character_id}/contacts/"
        let characterIdPreEscape = "\(characterId)"
        let characterIdPostEscape = characterIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{character_id}", with: characterIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "contact_ids": contactIds, 
                        "datasource": datasource?.rawValue, 
                        "token": token
        ])


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter datasource
     */
    public enum Datasource_getAlliancesAllianceIdContacts: String { 
        case tranquility = "tranquility"
    }

    /**
     Get alliance contacts

     - parameter allianceId: (path) An EVE alliance ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter page: (query) Which page of results to return (optional, default to 1)
     - parameter token: (query) Access token to use if unable to set a header (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getAlliancesAllianceIdContacts(allianceId: Int, datasource: Datasource_getAlliancesAllianceIdContacts? = nil, ifNoneMatch: String? = nil, page: Int? = nil, token: String? = nil, completion: @escaping ((_ data: [GetAlliancesAllianceIdContacts200Ok]?,_ error: Error?) -> Void)) {
        getAlliancesAllianceIdContactsWithRequestBuilder(allianceId: allianceId, datasource: datasource, ifNoneMatch: ifNoneMatch, page: page, token: token).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get alliance contacts
     - GET /v2/alliances/{alliance_id}/contacts/

     - OAuth:
       - type: oauth2
       - name: evesso
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - examples: [{contentType=application/json, example=[ {
  "standing" : 1.4658129,
  "contact_type" : "character",
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
}, {
  "standing" : 1.4658129,
  "contact_type" : "character",
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
}, {
  "standing" : 1.4658129,
  "contact_type" : "character",
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
}, {
  "standing" : 1.4658129,
  "contact_type" : "character",
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
}, {
  "standing" : 1.4658129,
  "contact_type" : "character",
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
}, {
  "standing" : 1.4658129,
  "contact_type" : "character",
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
}, {
  "standing" : 1.4658129,
  "contact_type" : "character",
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
}, {
  "standing" : 1.4658129,
  "contact_type" : "character",
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
}, {
  "standing" : 1.4658129,
  "contact_type" : "character",
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
}, {
  "standing" : 1.4658129,
  "contact_type" : "character",
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
} ]}]
     - parameter allianceId: (path) An EVE alliance ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter page: (query) Which page of results to return (optional, default to 1)
     - parameter token: (query) Access token to use if unable to set a header (optional)

     - returns: RequestBuilder<[GetAlliancesAllianceIdContacts200Ok]> 
     */
    open class func getAlliancesAllianceIdContactsWithRequestBuilder(allianceId: Int, datasource: Datasource_getAlliancesAllianceIdContacts? = nil, ifNoneMatch: String? = nil, page: Int? = nil, token: String? = nil) -> RequestBuilder<[GetAlliancesAllianceIdContacts200Ok]> {
        var path = "/v2/alliances/{alliance_id}/contacts/"
        let allianceIdPreEscape = "\(allianceId)"
        let allianceIdPostEscape = allianceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{alliance_id}", with: allianceIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "datasource": datasource?.rawValue, 
                        "page": page?.encodeToJSON(), 
                        "token": token
        ])
        let nillableHeaders: [String: Any?] = [
                        "If-None-Match": ifNoneMatch
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[GetAlliancesAllianceIdContacts200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }
    /**
     * enum for parameter datasource
     */
    public enum Datasource_getAlliancesAllianceIdContactsLabels: String { 
        case tranquility = "tranquility"
    }

    /**
     Get alliance contact labels

     - parameter allianceId: (path) An EVE alliance ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter token: (query) Access token to use if unable to set a header (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getAlliancesAllianceIdContactsLabels(allianceId: Int, datasource: Datasource_getAlliancesAllianceIdContactsLabels? = nil, ifNoneMatch: String? = nil, token: String? = nil, completion: @escaping ((_ data: [GetAlliancesAllianceIdContactsLabels200Ok]?,_ error: Error?) -> Void)) {
        getAlliancesAllianceIdContactsLabelsWithRequestBuilder(allianceId: allianceId, datasource: datasource, ifNoneMatch: ifNoneMatch, token: token).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get alliance contact labels
     - GET /v1/alliances/{alliance_id}/contacts/labels/

     - OAuth:
       - type: oauth2
       - name: evesso
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - examples: [{contentType=application/json, example=[ {
  "label_name" : "label_name",
  "label_id" : 0
}, {
  "label_name" : "label_name",
  "label_id" : 0
}, {
  "label_name" : "label_name",
  "label_id" : 0
}, {
  "label_name" : "label_name",
  "label_id" : 0
}, {
  "label_name" : "label_name",
  "label_id" : 0
}, {
  "label_name" : "label_name",
  "label_id" : 0
}, {
  "label_name" : "label_name",
  "label_id" : 0
}, {
  "label_name" : "label_name",
  "label_id" : 0
}, {
  "label_name" : "label_name",
  "label_id" : 0
}, {
  "label_name" : "label_name",
  "label_id" : 0
} ]}]
     - parameter allianceId: (path) An EVE alliance ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter token: (query) Access token to use if unable to set a header (optional)

     - returns: RequestBuilder<[GetAlliancesAllianceIdContactsLabels200Ok]> 
     */
    open class func getAlliancesAllianceIdContactsLabelsWithRequestBuilder(allianceId: Int, datasource: Datasource_getAlliancesAllianceIdContactsLabels? = nil, ifNoneMatch: String? = nil, token: String? = nil) -> RequestBuilder<[GetAlliancesAllianceIdContactsLabels200Ok]> {
        var path = "/v1/alliances/{alliance_id}/contacts/labels/"
        let allianceIdPreEscape = "\(allianceId)"
        let allianceIdPostEscape = allianceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{alliance_id}", with: allianceIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "datasource": datasource?.rawValue, 
                        "token": token
        ])
        let nillableHeaders: [String: Any?] = [
                        "If-None-Match": ifNoneMatch
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[GetAlliancesAllianceIdContactsLabels200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }
    /**
     * enum for parameter datasource
     */
    public enum Datasource_getCharactersCharacterIdContacts: String { 
        case tranquility = "tranquility"
    }

    /**
     Get contacts

     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter page: (query) Which page of results to return (optional, default to 1)
     - parameter token: (query) Access token to use if unable to set a header (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getCharactersCharacterIdContacts(characterId: Int, datasource: Datasource_getCharactersCharacterIdContacts? = nil, ifNoneMatch: String? = nil, page: Int? = nil, token: String? = nil, completion: @escaping ((_ data: [GetCharactersCharacterIdContacts200Ok]?,_ error: Error?) -> Void)) {
        getCharactersCharacterIdContactsWithRequestBuilder(characterId: characterId, datasource: datasource, ifNoneMatch: ifNoneMatch, page: page, token: token).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get contacts
     - GET /v2/characters/{character_id}/contacts/

     - OAuth:
       - type: oauth2
       - name: evesso
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - examples: [{contentType=application/json, example=[ {
  "is_watched" : true,
  "standing" : 1.4658129,
  "contact_type" : "character",
  "is_blocked" : true,
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
}, {
  "is_watched" : true,
  "standing" : 1.4658129,
  "contact_type" : "character",
  "is_blocked" : true,
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
}, {
  "is_watched" : true,
  "standing" : 1.4658129,
  "contact_type" : "character",
  "is_blocked" : true,
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
}, {
  "is_watched" : true,
  "standing" : 1.4658129,
  "contact_type" : "character",
  "is_blocked" : true,
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
}, {
  "is_watched" : true,
  "standing" : 1.4658129,
  "contact_type" : "character",
  "is_blocked" : true,
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
}, {
  "is_watched" : true,
  "standing" : 1.4658129,
  "contact_type" : "character",
  "is_blocked" : true,
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
}, {
  "is_watched" : true,
  "standing" : 1.4658129,
  "contact_type" : "character",
  "is_blocked" : true,
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
}, {
  "is_watched" : true,
  "standing" : 1.4658129,
  "contact_type" : "character",
  "is_blocked" : true,
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
}, {
  "is_watched" : true,
  "standing" : 1.4658129,
  "contact_type" : "character",
  "is_blocked" : true,
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
}, {
  "is_watched" : true,
  "standing" : 1.4658129,
  "contact_type" : "character",
  "is_blocked" : true,
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
} ]}]
     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter page: (query) Which page of results to return (optional, default to 1)
     - parameter token: (query) Access token to use if unable to set a header (optional)

     - returns: RequestBuilder<[GetCharactersCharacterIdContacts200Ok]> 
     */
    open class func getCharactersCharacterIdContactsWithRequestBuilder(characterId: Int, datasource: Datasource_getCharactersCharacterIdContacts? = nil, ifNoneMatch: String? = nil, page: Int? = nil, token: String? = nil) -> RequestBuilder<[GetCharactersCharacterIdContacts200Ok]> {
        var path = "/v2/characters/{character_id}/contacts/"
        let characterIdPreEscape = "\(characterId)"
        let characterIdPostEscape = characterIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{character_id}", with: characterIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "datasource": datasource?.rawValue, 
                        "page": page?.encodeToJSON(), 
                        "token": token
        ])
        let nillableHeaders: [String: Any?] = [
                        "If-None-Match": ifNoneMatch
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[GetCharactersCharacterIdContacts200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }
    /**
     * enum for parameter datasource
     */
    public enum Datasource_getCharactersCharacterIdContactsLabels: String { 
        case tranquility = "tranquility"
    }

    /**
     Get contact labels

     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter token: (query) Access token to use if unable to set a header (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getCharactersCharacterIdContactsLabels(characterId: Int, datasource: Datasource_getCharactersCharacterIdContactsLabels? = nil, ifNoneMatch: String? = nil, token: String? = nil, completion: @escaping ((_ data: [GetCharactersCharacterIdContactsLabels200Ok]?,_ error: Error?) -> Void)) {
        getCharactersCharacterIdContactsLabelsWithRequestBuilder(characterId: characterId, datasource: datasource, ifNoneMatch: ifNoneMatch, token: token).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get contact labels
     - GET /v1/characters/{character_id}/contacts/labels/

     - OAuth:
       - type: oauth2
       - name: evesso
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - examples: [{contentType=application/json, example=[ {
  "label_name" : "label_name",
  "label_id" : 0
}, {
  "label_name" : "label_name",
  "label_id" : 0
}, {
  "label_name" : "label_name",
  "label_id" : 0
}, {
  "label_name" : "label_name",
  "label_id" : 0
}, {
  "label_name" : "label_name",
  "label_id" : 0
}, {
  "label_name" : "label_name",
  "label_id" : 0
}, {
  "label_name" : "label_name",
  "label_id" : 0
}, {
  "label_name" : "label_name",
  "label_id" : 0
}, {
  "label_name" : "label_name",
  "label_id" : 0
}, {
  "label_name" : "label_name",
  "label_id" : 0
} ]}]
     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter token: (query) Access token to use if unable to set a header (optional)

     - returns: RequestBuilder<[GetCharactersCharacterIdContactsLabels200Ok]> 
     */
    open class func getCharactersCharacterIdContactsLabelsWithRequestBuilder(characterId: Int, datasource: Datasource_getCharactersCharacterIdContactsLabels? = nil, ifNoneMatch: String? = nil, token: String? = nil) -> RequestBuilder<[GetCharactersCharacterIdContactsLabels200Ok]> {
        var path = "/v1/characters/{character_id}/contacts/labels/"
        let characterIdPreEscape = "\(characterId)"
        let characterIdPostEscape = characterIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{character_id}", with: characterIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "datasource": datasource?.rawValue, 
                        "token": token
        ])
        let nillableHeaders: [String: Any?] = [
                        "If-None-Match": ifNoneMatch
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[GetCharactersCharacterIdContactsLabels200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }
    /**
     * enum for parameter datasource
     */
    public enum Datasource_getCorporationsCorporationIdContacts: String { 
        case tranquility = "tranquility"
    }

    /**
     Get corporation contacts

     - parameter corporationId: (path) An EVE corporation ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter page: (query) Which page of results to return (optional, default to 1)
     - parameter token: (query) Access token to use if unable to set a header (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getCorporationsCorporationIdContacts(corporationId: Int, datasource: Datasource_getCorporationsCorporationIdContacts? = nil, ifNoneMatch: String? = nil, page: Int? = nil, token: String? = nil, completion: @escaping ((_ data: [GetCorporationsCorporationIdContacts200Ok]?,_ error: Error?) -> Void)) {
        getCorporationsCorporationIdContactsWithRequestBuilder(corporationId: corporationId, datasource: datasource, ifNoneMatch: ifNoneMatch, page: page, token: token).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get corporation contacts
     - GET /v2/corporations/{corporation_id}/contacts/

     - OAuth:
       - type: oauth2
       - name: evesso
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - examples: [{contentType=application/json, example=[ {
  "is_watched" : true,
  "standing" : 1.4658129,
  "contact_type" : "character",
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
}, {
  "is_watched" : true,
  "standing" : 1.4658129,
  "contact_type" : "character",
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
}, {
  "is_watched" : true,
  "standing" : 1.4658129,
  "contact_type" : "character",
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
}, {
  "is_watched" : true,
  "standing" : 1.4658129,
  "contact_type" : "character",
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
}, {
  "is_watched" : true,
  "standing" : 1.4658129,
  "contact_type" : "character",
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
}, {
  "is_watched" : true,
  "standing" : 1.4658129,
  "contact_type" : "character",
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
}, {
  "is_watched" : true,
  "standing" : 1.4658129,
  "contact_type" : "character",
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
}, {
  "is_watched" : true,
  "standing" : 1.4658129,
  "contact_type" : "character",
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
}, {
  "is_watched" : true,
  "standing" : 1.4658129,
  "contact_type" : "character",
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
}, {
  "is_watched" : true,
  "standing" : 1.4658129,
  "contact_type" : "character",
  "label_ids" : [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ],
  "contact_id" : 0
} ]}]
     - parameter corporationId: (path) An EVE corporation ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter page: (query) Which page of results to return (optional, default to 1)
     - parameter token: (query) Access token to use if unable to set a header (optional)

     - returns: RequestBuilder<[GetCorporationsCorporationIdContacts200Ok]> 
     */
    open class func getCorporationsCorporationIdContactsWithRequestBuilder(corporationId: Int, datasource: Datasource_getCorporationsCorporationIdContacts? = nil, ifNoneMatch: String? = nil, page: Int? = nil, token: String? = nil) -> RequestBuilder<[GetCorporationsCorporationIdContacts200Ok]> {
        var path = "/v2/corporations/{corporation_id}/contacts/"
        let corporationIdPreEscape = "\(corporationId)"
        let corporationIdPostEscape = corporationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{corporation_id}", with: corporationIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "datasource": datasource?.rawValue, 
                        "page": page?.encodeToJSON(), 
                        "token": token
        ])
        let nillableHeaders: [String: Any?] = [
                        "If-None-Match": ifNoneMatch
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[GetCorporationsCorporationIdContacts200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }
    /**
     * enum for parameter datasource
     */
    public enum Datasource_getCorporationsCorporationIdContactsLabels: String { 
        case tranquility = "tranquility"
    }

    /**
     Get corporation contact labels

     - parameter corporationId: (path) An EVE corporation ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter token: (query) Access token to use if unable to set a header (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getCorporationsCorporationIdContactsLabels(corporationId: Int, datasource: Datasource_getCorporationsCorporationIdContactsLabels? = nil, ifNoneMatch: String? = nil, token: String? = nil, completion: @escaping ((_ data: [GetCorporationsCorporationIdContactsLabels200Ok]?,_ error: Error?) -> Void)) {
        getCorporationsCorporationIdContactsLabelsWithRequestBuilder(corporationId: corporationId, datasource: datasource, ifNoneMatch: ifNoneMatch, token: token).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get corporation contact labels
     - GET /v1/corporations/{corporation_id}/contacts/labels/

     - OAuth:
       - type: oauth2
       - name: evesso
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String)]
     - examples: [{contentType=application/json, example=[ {
  "label_name" : "label_name",
  "label_id" : 0
}, {
  "label_name" : "label_name",
  "label_id" : 0
}, {
  "label_name" : "label_name",
  "label_id" : 0
}, {
  "label_name" : "label_name",
  "label_id" : 0
}, {
  "label_name" : "label_name",
  "label_id" : 0
}, {
  "label_name" : "label_name",
  "label_id" : 0
}, {
  "label_name" : "label_name",
  "label_id" : 0
}, {
  "label_name" : "label_name",
  "label_id" : 0
}, {
  "label_name" : "label_name",
  "label_id" : 0
}, {
  "label_name" : "label_name",
  "label_id" : 0
} ]}]
     - parameter corporationId: (path) An EVE corporation ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter token: (query) Access token to use if unable to set a header (optional)

     - returns: RequestBuilder<[GetCorporationsCorporationIdContactsLabels200Ok]> 
     */
    open class func getCorporationsCorporationIdContactsLabelsWithRequestBuilder(corporationId: Int, datasource: Datasource_getCorporationsCorporationIdContactsLabels? = nil, ifNoneMatch: String? = nil, token: String? = nil) -> RequestBuilder<[GetCorporationsCorporationIdContactsLabels200Ok]> {
        var path = "/v1/corporations/{corporation_id}/contacts/labels/"
        let corporationIdPreEscape = "\(corporationId)"
        let corporationIdPostEscape = corporationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{corporation_id}", with: corporationIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "datasource": datasource?.rawValue, 
                        "token": token
        ])
        let nillableHeaders: [String: Any?] = [
                        "If-None-Match": ifNoneMatch
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[GetCorporationsCorporationIdContactsLabels200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }
    /**
     * enum for parameter datasource
     */
    public enum Datasource_postCharactersCharacterIdContacts: String { 
        case tranquility = "tranquility"
    }

    /**
     Add contacts

     - parameter body: (body) A list of contacts 
     - parameter standing: (query) Standing for the contact 
     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter labelIds: (query) Add custom labels to the new contact (optional)
     - parameter token: (query) Access token to use if unable to set a header (optional)
     - parameter watched: (query) Whether the contact should be watched, note this is only effective on characters (optional, default to false)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postCharactersCharacterIdContacts(body: [Int], standing: Float, characterId: Int, datasource: Datasource_postCharactersCharacterIdContacts? = nil, labelIds: [Int64]? = nil, token: String? = nil, watched: Bool? = nil, completion: @escaping ((_ data: [Int]?,_ error: Error?) -> Void)) {
        postCharactersCharacterIdContactsWithRequestBuilder(body: body, standing: standing, characterId: characterId, datasource: datasource, labelIds: labelIds, token: token, watched: watched).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Add contacts
     - POST /v2/characters/{character_id}/contacts/

     - OAuth:
       - type: oauth2
       - name: evesso
     - examples: [{contentType=application/json, example=[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]}]
     - parameter body: (body) A list of contacts 
     - parameter standing: (query) Standing for the contact 
     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter labelIds: (query) Add custom labels to the new contact (optional)
     - parameter token: (query) Access token to use if unable to set a header (optional)
     - parameter watched: (query) Whether the contact should be watched, note this is only effective on characters (optional, default to false)

     - returns: RequestBuilder<[Int]> 
     */
    open class func postCharactersCharacterIdContactsWithRequestBuilder(body: [Int], standing: Float, characterId: Int, datasource: Datasource_postCharactersCharacterIdContacts? = nil, labelIds: [Int64]? = nil, token: String? = nil, watched: Bool? = nil) -> RequestBuilder<[Int]> {
        var path = "/v2/characters/{character_id}/contacts/"
        let characterIdPreEscape = "\(characterId)"
        let characterIdPostEscape = characterIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{character_id}", with: characterIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "datasource": datasource?.rawValue, 
                        "label_ids": labelIds, 
                        "standing": standing, 
                        "token": token, 
                        "watched": watched
        ])


        let requestBuilder: RequestBuilder<[Int]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     * enum for parameter datasource
     */
    public enum Datasource_putCharactersCharacterIdContacts: String { 
        case tranquility = "tranquility"
    }

    /**
     Edit contacts

     - parameter body: (body) A list of contacts 
     - parameter standing: (query) Standing for the contact 
     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter labelIds: (query) Add custom labels to the contact (optional)
     - parameter token: (query) Access token to use if unable to set a header (optional)
     - parameter watched: (query) Whether the contact should be watched, note this is only effective on characters (optional, default to false)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putCharactersCharacterIdContacts(body: [Int], standing: Float, characterId: Int, datasource: Datasource_putCharactersCharacterIdContacts? = nil, labelIds: [Int64]? = nil, token: String? = nil, watched: Bool? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        putCharactersCharacterIdContactsWithRequestBuilder(body: body, standing: standing, characterId: characterId, datasource: datasource, labelIds: labelIds, token: token, watched: watched).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Edit contacts
     - PUT /v2/characters/{character_id}/contacts/

     - OAuth:
       - type: oauth2
       - name: evesso
     - parameter body: (body) A list of contacts 
     - parameter standing: (query) Standing for the contact 
     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter labelIds: (query) Add custom labels to the contact (optional)
     - parameter token: (query) Access token to use if unable to set a header (optional)
     - parameter watched: (query) Whether the contact should be watched, note this is only effective on characters (optional, default to false)

     - returns: RequestBuilder<Void> 
     */
    open class func putCharactersCharacterIdContactsWithRequestBuilder(body: [Int], standing: Float, characterId: Int, datasource: Datasource_putCharactersCharacterIdContacts? = nil, labelIds: [Int64]? = nil, token: String? = nil, watched: Bool? = nil) -> RequestBuilder<Void> {
        var path = "/v2/characters/{character_id}/contacts/"
        let characterIdPreEscape = "\(characterId)"
        let characterIdPostEscape = characterIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{character_id}", with: characterIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "datasource": datasource?.rawValue, 
                        "label_ids": labelIds, 
                        "standing": standing, 
                        "token": token, 
                        "watched": watched
        ])


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
