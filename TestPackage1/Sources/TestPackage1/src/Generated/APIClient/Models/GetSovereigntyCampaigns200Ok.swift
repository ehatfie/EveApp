//
// GetSovereigntyCampaigns200Ok.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** 200 ok object */

public struct GetSovereigntyCampaigns200Ok: Codable {

    public enum EventType: String, Codable { 
        case tcuDefense = "tcu_defense"
        case ihubDefense = "ihub_defense"
        case stationDefense = "station_defense"
        case stationFreeport = "station_freeport"
    }
    /** Score for all attacking parties, only present in Defense Events.  */
    public var attackersScore: Float?
    /** Unique ID for this campaign. */
    public var campaignId: Int
    /** The constellation in which the campaign will take place.  */
    public var constellationId: Int
    /** Defending alliance, only present in Defense Events  */
    public var defenderId: Int?
    /** Score for the defending alliance, only present in Defense Events.  */
    public var defenderScore: Float?
    /** Type of event this campaign is for. tcu_defense, ihub_defense and station_defense are referred to as \&quot;Defense Events\&quot;, station_freeport as \&quot;Freeport Events\&quot;.  */
    public var eventType: EventType
    /** Alliance participating and their respective scores, only present in Freeport Events.  */
    public var participants: [GetSovereigntyCampaignsParticipant]?
    /** The solar system the structure is located in.  */
    public var solarSystemId: Int
    /** Time the event is scheduled to start.  */
    public var startTime: Date
    /** The structure item ID that is related to this campaign.  */
    public var structureId: Int64

    public init(attackersScore: Float? = nil, campaignId: Int, constellationId: Int, defenderId: Int? = nil, defenderScore: Float? = nil, eventType: EventType, participants: [GetSovereigntyCampaignsParticipant]? = nil, solarSystemId: Int, startTime: Date, structureId: Int64) {
        self.attackersScore = attackersScore
        self.campaignId = campaignId
        self.constellationId = constellationId
        self.defenderId = defenderId
        self.defenderScore = defenderScore
        self.eventType = eventType
        self.participants = participants
        self.solarSystemId = solarSystemId
        self.startTime = startTime
        self.structureId = structureId
    }

    public enum CodingKeys: String, CodingKey { 
        case attackersScore = "attackers_score"
        case campaignId = "campaign_id"
        case constellationId = "constellation_id"
        case defenderId = "defender_id"
        case defenderScore = "defender_score"
        case eventType = "event_type"
        case participants
        case solarSystemId = "solar_system_id"
        case startTime = "start_time"
        case structureId = "structure_id"
    }

}
