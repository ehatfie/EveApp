//
// AssetsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


@MainActor open class AssetsAPI {
    /**
     * enum for parameter datasource
     */
    public enum Datasource_getCharactersCharacterIdAssets: String { 
        case tranquility = "tranquility"
    }

    /**
     Get character assets

     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter page: (query) Which page of results to return (optional, default to 1)
     - parameter token: (query) Access token to use if unable to set a header (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    @MainActor open class func getCharactersCharacterIdAssets(characterId: Int, datasource: Datasource_getCharactersCharacterIdAssets? = nil, ifNoneMatch: String? = nil, page: Int? = nil, token: String? = nil, completion: @escaping ((_ data: [GetCharactersCharacterIdAssets200Ok]?,_ error: Error?) -> Void)) {
        getCharactersCharacterIdAssetsWithRequestBuilder(characterId: characterId, datasource: datasource, ifNoneMatch: ifNoneMatch, page: page, token: token).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get character assets
     - GET /v5/characters/{character_id}/assets/

     - OAuth:
       - type: oauth2
       - name: evesso
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - examples: [{contentType=application/json, example=[ {
  "is_blueprint_copy" : true,
  "is_singleton" : true,
  "quantity" : 1,
  "item_id" : 0,
  "location_flag" : "AssetSafety",
  "type_id" : 5,
  "location_id" : 6,
  "location_type" : "station"
}, {
  "is_blueprint_copy" : true,
  "is_singleton" : true,
  "quantity" : 1,
  "item_id" : 0,
  "location_flag" : "AssetSafety",
  "type_id" : 5,
  "location_id" : 6,
  "location_type" : "station"
}, {
  "is_blueprint_copy" : true,
  "is_singleton" : true,
  "quantity" : 1,
  "item_id" : 0,
  "location_flag" : "AssetSafety",
  "type_id" : 5,
  "location_id" : 6,
  "location_type" : "station"
}, {
  "is_blueprint_copy" : true,
  "is_singleton" : true,
  "quantity" : 1,
  "item_id" : 0,
  "location_flag" : "AssetSafety",
  "type_id" : 5,
  "location_id" : 6,
  "location_type" : "station"
}, {
  "is_blueprint_copy" : true,
  "is_singleton" : true,
  "quantity" : 1,
  "item_id" : 0,
  "location_flag" : "AssetSafety",
  "type_id" : 5,
  "location_id" : 6,
  "location_type" : "station"
}, {
  "is_blueprint_copy" : true,
  "is_singleton" : true,
  "quantity" : 1,
  "item_id" : 0,
  "location_flag" : "AssetSafety",
  "type_id" : 5,
  "location_id" : 6,
  "location_type" : "station"
}, {
  "is_blueprint_copy" : true,
  "is_singleton" : true,
  "quantity" : 1,
  "item_id" : 0,
  "location_flag" : "AssetSafety",
  "type_id" : 5,
  "location_id" : 6,
  "location_type" : "station"
}, {
  "is_blueprint_copy" : true,
  "is_singleton" : true,
  "quantity" : 1,
  "item_id" : 0,
  "location_flag" : "AssetSafety",
  "type_id" : 5,
  "location_id" : 6,
  "location_type" : "station"
}, {
  "is_blueprint_copy" : true,
  "is_singleton" : true,
  "quantity" : 1,
  "item_id" : 0,
  "location_flag" : "AssetSafety",
  "type_id" : 5,
  "location_id" : 6,
  "location_type" : "station"
}, {
  "is_blueprint_copy" : true,
  "is_singleton" : true,
  "quantity" : 1,
  "item_id" : 0,
  "location_flag" : "AssetSafety",
  "type_id" : 5,
  "location_id" : 6,
  "location_type" : "station"
} ]}]
     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter page: (query) Which page of results to return (optional, default to 1)
     - parameter token: (query) Access token to use if unable to set a header (optional)

     - returns: RequestBuilder<[GetCharactersCharacterIdAssets200Ok]> 
     */
    @MainActor open class func getCharactersCharacterIdAssetsWithRequestBuilder(characterId: Int, datasource: Datasource_getCharactersCharacterIdAssets? = nil, ifNoneMatch: String? = nil, page: Int? = nil, token: String? = nil) -> RequestBuilder<[GetCharactersCharacterIdAssets200Ok]> {
        var path = "/v5/characters/{character_id}/assets/"
        let characterIdPreEscape = "\(characterId)"
        let characterIdPostEscape = characterIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{character_id}", with: characterIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "datasource": datasource?.rawValue, 
                        "page": page?.encodeToJSON(), 
                        "token": token
        ])
        let nillableHeaders: [String: Any?] = [
                        "If-None-Match": ifNoneMatch
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[GetCharactersCharacterIdAssets200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }
    /**
     * enum for parameter datasource
     */
    public enum Datasource_getCorporationsCorporationIdAssets: String { 
        case tranquility = "tranquility"
    }

    /**
     Get corporation assets

     - parameter corporationId: (path) An EVE corporation ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter page: (query) Which page of results to return (optional, default to 1)
     - parameter token: (query) Access token to use if unable to set a header (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    @MainActor open class func getCorporationsCorporationIdAssets(corporationId: Int, datasource: Datasource_getCorporationsCorporationIdAssets? = nil, ifNoneMatch: String? = nil, page: Int? = nil, token: String? = nil, completion: @escaping ((_ data: [GetCorporationsCorporationIdAssets200Ok]?,_ error: Error?) -> Void)) {
        getCorporationsCorporationIdAssetsWithRequestBuilder(corporationId: corporationId, datasource: datasource, ifNoneMatch: ifNoneMatch, page: page, token: token).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get corporation assets
     - GET /v5/corporations/{corporation_id}/assets/

     - OAuth:
       - type: oauth2
       - name: evesso
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), X-Pages(Int)]
     - examples: [{contentType=application/json, example=[ {
  "is_blueprint_copy" : true,
  "is_singleton" : true,
  "quantity" : 1,
  "item_id" : 0,
  "location_flag" : "AssetSafety",
  "type_id" : 5,
  "location_id" : 6,
  "location_type" : "station"
}, {
  "is_blueprint_copy" : true,
  "is_singleton" : true,
  "quantity" : 1,
  "item_id" : 0,
  "location_flag" : "AssetSafety",
  "type_id" : 5,
  "location_id" : 6,
  "location_type" : "station"
}, {
  "is_blueprint_copy" : true,
  "is_singleton" : true,
  "quantity" : 1,
  "item_id" : 0,
  "location_flag" : "AssetSafety",
  "type_id" : 5,
  "location_id" : 6,
  "location_type" : "station"
}, {
  "is_blueprint_copy" : true,
  "is_singleton" : true,
  "quantity" : 1,
  "item_id" : 0,
  "location_flag" : "AssetSafety",
  "type_id" : 5,
  "location_id" : 6,
  "location_type" : "station"
}, {
  "is_blueprint_copy" : true,
  "is_singleton" : true,
  "quantity" : 1,
  "item_id" : 0,
  "location_flag" : "AssetSafety",
  "type_id" : 5,
  "location_id" : 6,
  "location_type" : "station"
}, {
  "is_blueprint_copy" : true,
  "is_singleton" : true,
  "quantity" : 1,
  "item_id" : 0,
  "location_flag" : "AssetSafety",
  "type_id" : 5,
  "location_id" : 6,
  "location_type" : "station"
}, {
  "is_blueprint_copy" : true,
  "is_singleton" : true,
  "quantity" : 1,
  "item_id" : 0,
  "location_flag" : "AssetSafety",
  "type_id" : 5,
  "location_id" : 6,
  "location_type" : "station"
}, {
  "is_blueprint_copy" : true,
  "is_singleton" : true,
  "quantity" : 1,
  "item_id" : 0,
  "location_flag" : "AssetSafety",
  "type_id" : 5,
  "location_id" : 6,
  "location_type" : "station"
}, {
  "is_blueprint_copy" : true,
  "is_singleton" : true,
  "quantity" : 1,
  "item_id" : 0,
  "location_flag" : "AssetSafety",
  "type_id" : 5,
  "location_id" : 6,
  "location_type" : "station"
}, {
  "is_blueprint_copy" : true,
  "is_singleton" : true,
  "quantity" : 1,
  "item_id" : 0,
  "location_flag" : "AssetSafety",
  "type_id" : 5,
  "location_id" : 6,
  "location_type" : "station"
} ]}]
     - parameter corporationId: (path) An EVE corporation ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter page: (query) Which page of results to return (optional, default to 1)
     - parameter token: (query) Access token to use if unable to set a header (optional)

     - returns: RequestBuilder<[GetCorporationsCorporationIdAssets200Ok]> 
     */
    @MainActor open class func getCorporationsCorporationIdAssetsWithRequestBuilder(corporationId: Int, datasource: Datasource_getCorporationsCorporationIdAssets? = nil, ifNoneMatch: String? = nil, page: Int? = nil, token: String? = nil) -> RequestBuilder<[GetCorporationsCorporationIdAssets200Ok]> {
        var path = "/v5/corporations/{corporation_id}/assets/"
        let corporationIdPreEscape = "\(corporationId)"
        let corporationIdPostEscape = corporationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{corporation_id}", with: corporationIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "datasource": datasource?.rawValue, 
                        "page": page?.encodeToJSON(), 
                        "token": token
        ])
        let nillableHeaders: [String: Any?] = [
                        "If-None-Match": ifNoneMatch
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[GetCorporationsCorporationIdAssets200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }
    /**
     * enum for parameter datasource
     */
    public enum Datasource_postCharactersCharacterIdAssetsLocations: String { 
        case tranquility = "tranquility"
    }

    /**
     Get character asset locations

     - parameter body: (body) A list of item ids 
     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter token: (query) Access token to use if unable to set a header (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    @MainActor open class func postCharactersCharacterIdAssetsLocations(body: [Int64], characterId: Int, datasource: Datasource_postCharactersCharacterIdAssetsLocations? = nil, token: String? = nil, completion: @escaping ((_ data: [PostCharactersCharacterIdAssetsLocations200Ok]?,_ error: Error?) -> Void)) {
        postCharactersCharacterIdAssetsLocationsWithRequestBuilder(body: body, characterId: characterId, datasource: datasource, token: token).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get character asset locations
     - POST /v2/characters/{character_id}/assets/locations/

     - OAuth:
       - type: oauth2
       - name: evesso
     - examples: [{contentType=application/json, example=[ {
  "item_id" : 0,
  "position" : {
    "x" : 6.027456183070403,
    "y" : 1.4658129805029452,
    "z" : 5.962133916683182
  }
}, {
  "item_id" : 0,
  "position" : {
    "x" : 6.027456183070403,
    "y" : 1.4658129805029452,
    "z" : 5.962133916683182
  }
}, {
  "item_id" : 0,
  "position" : {
    "x" : 6.027456183070403,
    "y" : 1.4658129805029452,
    "z" : 5.962133916683182
  }
}, {
  "item_id" : 0,
  "position" : {
    "x" : 6.027456183070403,
    "y" : 1.4658129805029452,
    "z" : 5.962133916683182
  }
}, {
  "item_id" : 0,
  "position" : {
    "x" : 6.027456183070403,
    "y" : 1.4658129805029452,
    "z" : 5.962133916683182
  }
}, {
  "item_id" : 0,
  "position" : {
    "x" : 6.027456183070403,
    "y" : 1.4658129805029452,
    "z" : 5.962133916683182
  }
}, {
  "item_id" : 0,
  "position" : {
    "x" : 6.027456183070403,
    "y" : 1.4658129805029452,
    "z" : 5.962133916683182
  }
}, {
  "item_id" : 0,
  "position" : {
    "x" : 6.027456183070403,
    "y" : 1.4658129805029452,
    "z" : 5.962133916683182
  }
}, {
  "item_id" : 0,
  "position" : {
    "x" : 6.027456183070403,
    "y" : 1.4658129805029452,
    "z" : 5.962133916683182
  }
}, {
  "item_id" : 0,
  "position" : {
    "x" : 6.027456183070403,
    "y" : 1.4658129805029452,
    "z" : 5.962133916683182
  }
} ]}]
     - parameter body: (body) A list of item ids 
     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter token: (query) Access token to use if unable to set a header (optional)

     - returns: RequestBuilder<[PostCharactersCharacterIdAssetsLocations200Ok]> 
     */
    @MainActor open class func postCharactersCharacterIdAssetsLocationsWithRequestBuilder(body: [Int64], characterId: Int, datasource: Datasource_postCharactersCharacterIdAssetsLocations? = nil, token: String? = nil) -> RequestBuilder<[PostCharactersCharacterIdAssetsLocations200Ok]> {
        var path = "/v2/characters/{character_id}/assets/locations/"
        let characterIdPreEscape = "\(characterId)"
        let characterIdPostEscape = characterIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{character_id}", with: characterIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "datasource": datasource?.rawValue, 
                        "token": token
        ])


        let requestBuilder: RequestBuilder<[PostCharactersCharacterIdAssetsLocations200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     * enum for parameter datasource
     */
    public enum Datasource_postCharactersCharacterIdAssetsNames: String { 
        case tranquility = "tranquility"
    }

    /**
     Get character asset names

     - parameter body: (body) A list of item ids 
     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter token: (query) Access token to use if unable to set a header (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    @MainActor open class func postCharactersCharacterIdAssetsNames(body: [Int64], characterId: Int, datasource: Datasource_postCharactersCharacterIdAssetsNames? = nil, token: String? = nil, completion: @escaping ((_ data: [PostCharactersCharacterIdAssetsNames200Ok]?,_ error: Error?) -> Void)) {
        postCharactersCharacterIdAssetsNamesWithRequestBuilder(body: body, characterId: characterId, datasource: datasource, token: token).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get character asset names
     - POST /v1/characters/{character_id}/assets/names/

     - OAuth:
       - type: oauth2
       - name: evesso
     - examples: [{contentType=application/json, example=[ {
  "item_id" : 0,
  "name" : "name"
}, {
  "item_id" : 0,
  "name" : "name"
}, {
  "item_id" : 0,
  "name" : "name"
}, {
  "item_id" : 0,
  "name" : "name"
}, {
  "item_id" : 0,
  "name" : "name"
}, {
  "item_id" : 0,
  "name" : "name"
}, {
  "item_id" : 0,
  "name" : "name"
}, {
  "item_id" : 0,
  "name" : "name"
}, {
  "item_id" : 0,
  "name" : "name"
}, {
  "item_id" : 0,
  "name" : "name"
} ]}]
     - parameter body: (body) A list of item ids 
     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter token: (query) Access token to use if unable to set a header (optional)

     - returns: RequestBuilder<[PostCharactersCharacterIdAssetsNames200Ok]> 
     */
    @MainActor open class func postCharactersCharacterIdAssetsNamesWithRequestBuilder(body: [Int64], characterId: Int, datasource: Datasource_postCharactersCharacterIdAssetsNames? = nil, token: String? = nil) -> RequestBuilder<[PostCharactersCharacterIdAssetsNames200Ok]> {
        var path = "/v1/characters/{character_id}/assets/names/"
        let characterIdPreEscape = "\(characterId)"
        let characterIdPostEscape = characterIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{character_id}", with: characterIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "datasource": datasource?.rawValue, 
                        "token": token
        ])


        let requestBuilder: RequestBuilder<[PostCharactersCharacterIdAssetsNames200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     * enum for parameter datasource
     */
    public enum Datasource_postCorporationsCorporationIdAssetsLocations: String { 
        case tranquility = "tranquility"
    }

    /**
     Get corporation asset locations

     - parameter body: (body) A list of item ids 
     - parameter corporationId: (path) An EVE corporation ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter token: (query) Access token to use if unable to set a header (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    @MainActor open class func postCorporationsCorporationIdAssetsLocations(body: [Int64], corporationId: Int, datasource: Datasource_postCorporationsCorporationIdAssetsLocations? = nil, token: String? = nil, completion: @escaping ((_ data: [PostCorporationsCorporationIdAssetsLocations200Ok]?,_ error: Error?) -> Void)) {
        postCorporationsCorporationIdAssetsLocationsWithRequestBuilder(body: body, corporationId: corporationId, datasource: datasource, token: token).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get corporation asset locations
     - POST /v2/corporations/{corporation_id}/assets/locations/

     - OAuth:
       - type: oauth2
       - name: evesso
     - examples: [{contentType=application/json, example=[ {
  "item_id" : 0,
  "position" : {
    "x" : 6.027456183070403,
    "y" : 1.4658129805029452,
    "z" : 5.962133916683182
  }
}, {
  "item_id" : 0,
  "position" : {
    "x" : 6.027456183070403,
    "y" : 1.4658129805029452,
    "z" : 5.962133916683182
  }
}, {
  "item_id" : 0,
  "position" : {
    "x" : 6.027456183070403,
    "y" : 1.4658129805029452,
    "z" : 5.962133916683182
  }
}, {
  "item_id" : 0,
  "position" : {
    "x" : 6.027456183070403,
    "y" : 1.4658129805029452,
    "z" : 5.962133916683182
  }
}, {
  "item_id" : 0,
  "position" : {
    "x" : 6.027456183070403,
    "y" : 1.4658129805029452,
    "z" : 5.962133916683182
  }
}, {
  "item_id" : 0,
  "position" : {
    "x" : 6.027456183070403,
    "y" : 1.4658129805029452,
    "z" : 5.962133916683182
  }
}, {
  "item_id" : 0,
  "position" : {
    "x" : 6.027456183070403,
    "y" : 1.4658129805029452,
    "z" : 5.962133916683182
  }
}, {
  "item_id" : 0,
  "position" : {
    "x" : 6.027456183070403,
    "y" : 1.4658129805029452,
    "z" : 5.962133916683182
  }
}, {
  "item_id" : 0,
  "position" : {
    "x" : 6.027456183070403,
    "y" : 1.4658129805029452,
    "z" : 5.962133916683182
  }
}, {
  "item_id" : 0,
  "position" : {
    "x" : 6.027456183070403,
    "y" : 1.4658129805029452,
    "z" : 5.962133916683182
  }
} ]}]
     - parameter body: (body) A list of item ids 
     - parameter corporationId: (path) An EVE corporation ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter token: (query) Access token to use if unable to set a header (optional)

     - returns: RequestBuilder<[PostCorporationsCorporationIdAssetsLocations200Ok]> 
     */
    @MainActor open class func postCorporationsCorporationIdAssetsLocationsWithRequestBuilder(body: [Int64], corporationId: Int, datasource: Datasource_postCorporationsCorporationIdAssetsLocations? = nil, token: String? = nil) -> RequestBuilder<[PostCorporationsCorporationIdAssetsLocations200Ok]> {
        var path = "/v2/corporations/{corporation_id}/assets/locations/"
        let corporationIdPreEscape = "\(corporationId)"
        let corporationIdPostEscape = corporationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{corporation_id}", with: corporationIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "datasource": datasource?.rawValue, 
                        "token": token
        ])


        let requestBuilder: RequestBuilder<[PostCorporationsCorporationIdAssetsLocations200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     * enum for parameter datasource
     */
    public enum Datasource_postCorporationsCorporationIdAssetsNames: String { 
        case tranquility = "tranquility"
    }

    /**
     Get corporation asset names

     - parameter body: (body) A list of item ids 
     - parameter corporationId: (path) An EVE corporation ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter token: (query) Access token to use if unable to set a header (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    @MainActor open class func postCorporationsCorporationIdAssetsNames(body: [Int64], corporationId: Int, datasource: Datasource_postCorporationsCorporationIdAssetsNames? = nil, token: String? = nil, completion: @escaping ((_ data: [PostCorporationsCorporationIdAssetsNames200Ok]?,_ error: Error?) -> Void)) {
        postCorporationsCorporationIdAssetsNamesWithRequestBuilder(body: body, corporationId: corporationId, datasource: datasource, token: token).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get corporation asset names
     - POST /v1/corporations/{corporation_id}/assets/names/

     - OAuth:
       - type: oauth2
       - name: evesso
     - examples: [{contentType=application/json, example=[ {
  "item_id" : 0,
  "name" : "name"
}, {
  "item_id" : 0,
  "name" : "name"
}, {
  "item_id" : 0,
  "name" : "name"
}, {
  "item_id" : 0,
  "name" : "name"
}, {
  "item_id" : 0,
  "name" : "name"
}, {
  "item_id" : 0,
  "name" : "name"
}, {
  "item_id" : 0,
  "name" : "name"
}, {
  "item_id" : 0,
  "name" : "name"
}, {
  "item_id" : 0,
  "name" : "name"
}, {
  "item_id" : 0,
  "name" : "name"
} ]}]
     - parameter body: (body) A list of item ids 
     - parameter corporationId: (path) An EVE corporation ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter token: (query) Access token to use if unable to set a header (optional)

     - returns: RequestBuilder<[PostCorporationsCorporationIdAssetsNames200Ok]> 
     */
    @MainActor open class func postCorporationsCorporationIdAssetsNamesWithRequestBuilder(body: [Int64], corporationId: Int, datasource: Datasource_postCorporationsCorporationIdAssetsNames? = nil, token: String? = nil) -> RequestBuilder<[PostCorporationsCorporationIdAssetsNames200Ok]> {
        var path = "/v1/corporations/{corporation_id}/assets/names/"
        let corporationIdPreEscape = "\(corporationId)"
        let corporationIdPostEscape = corporationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{corporation_id}", with: corporationIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "datasource": datasource?.rawValue, 
                        "token": token
        ])


        let requestBuilder: RequestBuilder<[PostCorporationsCorporationIdAssetsNames200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
