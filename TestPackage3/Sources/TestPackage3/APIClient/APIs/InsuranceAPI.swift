//
// InsuranceAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


@MainActor open class InsuranceAPI {
    /**
     * enum for parameter acceptLanguage
     */
    public enum AcceptLanguage_getInsurancePrices: String { 
        case en = "en"
        case enUs = "en-us"
        case de = "de"
        case fr = "fr"
        case ja = "ja"
        case ru = "ru"
        case zh = "zh"
        case ko = "ko"
        case es = "es"
    }

    /**
     * enum for parameter datasource
     */
    public enum Datasource_getInsurancePrices: String { 
        case tranquility = "tranquility"
    }

    /**
     * enum for parameter language
     */
    public enum Language_getInsurancePrices: String { 
        case en = "en"
        case enUs = "en-us"
        case de = "de"
        case fr = "fr"
        case ja = "ja"
        case ru = "ru"
        case zh = "zh"
        case ko = "ko"
        case es = "es"
    }

    /**
     List insurance levels

     - parameter acceptLanguage: (header) Language to use in the response (optional, default to en)
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter language: (query) Language to use in the response, takes precedence over Accept-Language (optional, default to en)
     - parameter completion: completion handler to receive the data and the error objects
     */
    @MainActor open class func getInsurancePrices(acceptLanguage: AcceptLanguage_getInsurancePrices? = nil, datasource: Datasource_getInsurancePrices? = nil, ifNoneMatch: String? = nil, language: Language_getInsurancePrices? = nil, completion: @escaping ((_ data: [GetInsurancePrices200Ok]?,_ error: Error?) -> Void)) {
        getInsurancePricesWithRequestBuilder(acceptLanguage: acceptLanguage, datasource: datasource, ifNoneMatch: ifNoneMatch, language: language).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     List insurance levels
     - GET /v1/insurance/prices/

     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), Content-Language(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), Content-Language(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), Content-Language(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), Content-Language(String)]
     - responseHeaders: [Cache-Control(String), ETag(String), Expires(String), Last-Modified(String), Content-Language(String)]
     - examples: [{contentType=application/json, example=[ {
  "type_id" : 1,
  "levels" : [ {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  } ]
}, {
  "type_id" : 1,
  "levels" : [ {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  } ]
}, {
  "type_id" : 1,
  "levels" : [ {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  } ]
}, {
  "type_id" : 1,
  "levels" : [ {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  } ]
}, {
  "type_id" : 1,
  "levels" : [ {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  } ]
}, {
  "type_id" : 1,
  "levels" : [ {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  } ]
}, {
  "type_id" : 1,
  "levels" : [ {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  } ]
}, {
  "type_id" : 1,
  "levels" : [ {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  } ]
}, {
  "type_id" : 1,
  "levels" : [ {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  } ]
}, {
  "type_id" : 1,
  "levels" : [ {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  }, {
    "cost" : 0.8008282,
    "name" : "name",
    "payout" : 6.0274563
  } ]
} ]}]
     - parameter acceptLanguage: (header) Language to use in the response (optional, default to en)
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter ifNoneMatch: (header) ETag from a previous request. A 304 will be returned if this matches the current ETag (optional)
     - parameter language: (query) Language to use in the response, takes precedence over Accept-Language (optional, default to en)

     - returns: RequestBuilder<[GetInsurancePrices200Ok]> 
     */
    @MainActor open class func getInsurancePricesWithRequestBuilder(acceptLanguage: AcceptLanguage_getInsurancePrices? = nil, datasource: Datasource_getInsurancePrices? = nil, ifNoneMatch: String? = nil, language: Language_getInsurancePrices? = nil) -> RequestBuilder<[GetInsurancePrices200Ok]> {
        let path = "/v1/insurance/prices/"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "datasource": datasource?.rawValue, 
                        "language": language?.rawValue
        ])
        let nillableHeaders: [String: Any?] = [
                        "Accept-Language": acceptLanguage?.rawValue,
                        "If-None-Match": ifNoneMatch
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[GetInsurancePrices200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }
}
