//
// GetUniverseTypesTypeIdOk.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** 200 ok object */

public struct GetUniverseTypesTypeIdOk: Codable {

    /** capacity number */
    public var capacity: Float?
    /** description string */
    public var _description: String
    /** dogma_attributes array */
    public var dogmaAttributes: [GetUniverseTypesTypeIdDogmaAttribute]?
    /** dogma_effects array */
    public var dogmaEffects: [GetUniverseTypesTypeIdDogmaEffect]?
    /** graphic_id integer */
    public var graphicId: Int?
    /** group_id integer */
    public var groupId: Int
    /** icon_id integer */
    public var iconId: Int?
    /** This only exists for types that can be put on the market */
    public var marketGroupId: Int?
    /** mass number */
    public var mass: Float?
    /** name string */
    public var name: String
    /** packaged_volume number */
    public var packagedVolume: Float?
    /** portion_size integer */
    public var portionSize: Int?
    /** published boolean */
    public var published: Bool
    /** radius number */
    public var radius: Float?
    /** type_id integer */
    public var typeId: Int
    /** volume number */
    public var volume: Float?

    public init(capacity: Float? = nil, _description: String, dogmaAttributes: [GetUniverseTypesTypeIdDogmaAttribute]? = nil, dogmaEffects: [GetUniverseTypesTypeIdDogmaEffect]? = nil, graphicId: Int? = nil, groupId: Int, iconId: Int? = nil, marketGroupId: Int? = nil, mass: Float? = nil, name: String, packagedVolume: Float? = nil, portionSize: Int? = nil, published: Bool, radius: Float? = nil, typeId: Int, volume: Float? = nil) {
        self.capacity = capacity
        self._description = _description
        self.dogmaAttributes = dogmaAttributes
        self.dogmaEffects = dogmaEffects
        self.graphicId = graphicId
        self.groupId = groupId
        self.iconId = iconId
        self.marketGroupId = marketGroupId
        self.mass = mass
        self.name = name
        self.packagedVolume = packagedVolume
        self.portionSize = portionSize
        self.published = published
        self.radius = radius
        self.typeId = typeId
        self.volume = volume
    }

    public enum CodingKeys: String, CodingKey { 
        case capacity
        case _description = "description"
        case dogmaAttributes = "dogma_attributes"
        case dogmaEffects = "dogma_effects"
        case graphicId = "graphic_id"
        case groupId = "group_id"
        case iconId = "icon_id"
        case marketGroupId = "market_group_id"
        case mass
        case name
        case packagedVolume = "packaged_volume"
        case portionSize = "portion_size"
        case published
        case radius
        case typeId = "type_id"
        case volume
    }

}
